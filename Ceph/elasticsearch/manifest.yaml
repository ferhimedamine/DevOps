---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    component: elasticsearch
    role: data
  name: elasticsearch
  namespace: monitoring1
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      component: elasticsearch
      role: data
  serviceName: elasticsearch-data
  template:
    metadata:
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[{"name":"init-sysctl","image":"busybox","command":["sysctl","-w","vm.max_map_count=262144"],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"privileged":true}}]'
        pod.beta.kubernetes.io/init-containers: '[{"name":"init-sysctl","image":"busybox","command":["sysctl","-w","vm.max_map_count=262144"],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"privileged":true}}]'
      creationTimestamp: 
      labels:
        component: elasticsearch
        role: data
    spec:
      #affinity:
      #  nodeAffinity:
      #    requiredDuringSchedulingIgnoredDuringExecution:
      #      nodeSelectorTerms:
      #      - matchExpressions:
      #        - key: Node
      #          operator: In
      #          values:
      #          - Node-5
      #          - Node-6
      #          - Node-7
      #  podAntiAffinity:
      #    requiredDuringSchedulingIgnoredDuringExecution:
      #    - labelSelector:
      #        matchExpressions:
      #        - key: role
      #          operator: In
      #          values:
      #          - data
      #      topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: CLUSTER_NAME
          value: elasticsearch-cluster
        - name: NODE_MASTER
          value: 'true'
        - name: NODE_INGEST
          value: 'true'
        - name: NODE_DATA
          value: 'true'
        - name: HTTP_ENABLE
          value: 'true'
        - name: ES_JAVA_OPTS
          value: "-Xms2g -Xmx2g"
        - name: NUMBER_OF_MASTERS
          value: '2'
        - name: NETWORK_HOST
          value: _eth0:ipv4_
        image: quay.io/pires/docker-elasticsearch-kubernetes:6.3.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: transport
          timeoutSeconds: 1
        name: elasticsearch
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        - containerPort: 9200
          name: http
          protocol: TCP
        resources:
          limits:
            memory: 2697308774400m
        securityContext:
          capabilities:
            add:
            - IPC_LOCK
          privileged: true
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: "/data"
          name: es-data1
        - mountPath: "/data/log"
          name: elasticlogs1
      imagePullSecrets:
      - name: mysecret
      initContainers:
      - command:
        - sysctl
        - "-w"
        - vm.max_map_count=262144
        image: busybox
        imagePullPolicy: IfNotPresent
        name: init-sysctl
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: File
      schedulerName: default-scheduler
      volumes:
      - hostPath:
          path: "/var/log/elasticsearch/"
          type: ''
        name: elasticlogs1
     # - hostPath:
     #     path: "/var/lib/es-data/"
     #     type: ''
     #   name: es-data
  volumeClaimTemplates:
  - metadata:
      name: es-data1
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 200Mi
  #- metadata:
  #    name: elasticlogs1
  #  spec:
  #    accessModes: [ "ReadWriteOnce" ]
  #    resources:
  #      requests:
  #        storage: 100Mi
  updateStrategy:
    type: OnDelete
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: elasticsearch
    role: data
  name: elasticsearch
  namespace: monitoring1
spec:
  ports:
  - name: http
    nodePort: 32329
    port: 9200
    protocol: TCP
    targetPort: 9200
  selector:
    component: elasticsearch
    role: data 
  sessionAffinity: None
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-discovery
  namespace: monitoring1
  labels:
    component: elasticsearch
    role: data
spec:
  selector:
    component: elasticsearch
    role: data
  ports:
  - name: transport
    port: 9300
    protocol: TCP
---
